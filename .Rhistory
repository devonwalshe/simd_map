source("init.R")
simd_raw = import_simd()
source("init.R")
source("init.R")
simd_raw = import_simd()
simd_raw
nrow(simd_raw$simd)
str(simd_raw)
source("init.R")
simd_raw = import_simd()
str(simd_raw$simd)
install.packages(rgdal)
install.packages("rgdal")
~volcano
install.packages
install.packages("plotl")
install.packages("plotly")
add_surface()
library(plotly)
add_surface()
plot_ly(z = ~volcano) %>% add_surface()
add_trace()
library(plotly)
add_trace()
plot_ly(z = ~volcano) %>% add_surface()
p <- plot_ly(z = ~temp) %>% add_surface()
df <- read.csv('https://raw.githubusercontent.com/plotly/datasets/master/3d-line1.csv')
lst <- levels(factor(df$color))
plots <- list()
for(i in 1:nlevels(factor(df$color))){
subdf <- dplyr::filter(df, color == lst[i])
dens = akima::interp(subdf$x, subdf$y, subdf$z, duplicate = "mean")
p <- plot_ly(x = dens$x, y = dens$y, z = dens$z, colors = c("blue","red"), type = "surface")
plots[[i]] <- p
}
subplot(plots, nrows = 2)
read.csv('https://raw.githubusercontent.com/plotly/datasets/master/3d-line1.csv')
read.csv("https://raw.githubusercontent.com/plotly/datasets/master/3d-line1.csv")
read.csv("http://raw.githubusercontent.com/plotly/datasets/master/3d-line1.csv")
devtools::install_github("ropensci/plotly")
packageVersion("devtools")
devtools::install_github("hadley/devtools")
install.packages("devtools")
install.packages("devtools")
packageVersion("devtools")
devtools::install_github("ropensci/plotly")
options(buildtools.check = function(action) TRUE)
devtools::install_github("ropensci/plotly")
devtools::install_github("ropensci/plotly")
Sys.which("make")
remove.packages("plotly")
devtools::install_github("ropensci/plotly")
devtools::has_devel()
library("plotly")
library(maptools)
install.packages("maptools")
library(maptools)
install.packages("raster")
library("raster")
getData(‘alt’, country=’PHL’)
getData('alt', country='PHL')
alt = getData('alt', country='PHL')
getData('GADM', country='PHL', leve=1)
adm = getData('GADM', country='PHL', leve=1)
adm[adm$NAME_1=="Marinduque"]
adm[adm$NAME_1=="Marinduque",]
mar = adm[adm$NAME_1=="Marinduque",]
alt
crop(alt,mar)
maralt = crop(alt,mar)
persp(maralt, exp=0.2,phi=35, xlab=”Longitude”, ylab=”Latitude”, zlab=”Elevation”)
colnames(maralt))
colnames(maralt)
names(maralt)
maralt$PHL_msk_alt
colnames(maralt$PHL_msk_alt)
persp(maralt, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation")
volcano
plot(volcano)
persp(volcano, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation")
persp(volcano, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=0.2)
persp(volcano, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=0.8)
persp(volcano, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=01)
persp(volcano, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=1)
persp(volcano, exp=0.2, phi=35, xlab="Longitude", ylab="Latitude", zlab="Elevation", shade=1, col="green4")
breaks = quantile(volcano, seq(0, 1, length.out=256))
cols = colorRampPalette(c("#55FFFF", "grey10"))(255)
par(mfrow = c(1, 2))
image(volcano, col=cols, axes=F, asp=T)
title(main = "Linear")
image(volcano, col=cols, breaks=breaks, axes=F, asp=T)
title(main = "Quantile")
breaks
head(volcano)
quantile(volcano, seq(0, 1, length.out=256))
seq(0, 1, length.out=256)
?length.out
??length.out
?seq
sudo rm -rf /opt/local
image(volcano, col=cols, axes=F, asp=T)
par(mfrow = 1)
par(mfrow = c(1,1))
image(volcano, col=cols, axes=F, asp=T)
